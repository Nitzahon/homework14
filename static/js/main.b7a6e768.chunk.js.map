{"version":3,"sources":["components/RoomLink.js","components/Home.js","components/AddRoom.js","components/DeviceComp.js","components/AddDevice.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["RoomLink","props","state","index","bgc","color","type","name","className","style","backgroundColor","this","Component","Home","rooms","map","elm","i","to","pathname","room","AddRoom","addProp","e","target","setState","value","createRoom","length","alert","addR","devices","onChange","selected","disabled","maxlength","placeholder","defaultValue","textDecoration","onClick","DeviceComp","toggle","colr","flag","tempVice","upR","device","AddDevice","addType","addDev","Room","tempRoom","tempRooms","show","location","console","log","App","UpdateRoom","exact","path","component","ind","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7a6e768.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class RoomLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      index: props.index,\r\n      bgc: props.color,\r\n      type: props.type,\r\n      name: props.name\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn roomSq roomName\"\r\n          style={{ backgroundColor: this.state.bgc }}\r\n        >\r\n          {this.state.name}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RoomLink from \"./RoomLink.js\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rooms: props.rooms\r\n    };\r\n  }\r\n  //   AddRoom = (room)=>{\r\n  //     this.props.addR(room);\r\n  //   }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"roomList\">\r\n          {this.state.rooms.map((elm, i) => {\r\n            return (\r\n              <Link\r\n                to={{\r\n                  pathname: \"/Room\",\r\n                  state: { room: elm, index: i }\r\n                }}\r\n              >\r\n                <RoomLink\r\n                  name={elm.name}\r\n                  type={elm.type}\r\n                  index={i}\r\n                  color={elm.color}\r\n                />\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n        <div>\r\n          <div className=\"btncontainer\">\r\n            <Link to=\"/AddRoom\">\r\n              <button className=\"btn btn-primary circbtn rounded-circle\">\r\n                +\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AddRoom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      bgc: \"#ff0000\",\r\n      type: \"\",\r\n      name: \"\"\r\n    };\r\n  }\r\n  addProp = e => {\r\n    switch (e.target.name) {\r\n      case \"roomType\":\r\n        this.setState({ type: e.target.value });\r\n        break;\r\n      case \"roomName\":\r\n        this.setState({ name: e.target.value });\r\n        break;\r\n      case \"roomColor\":\r\n        this.setState({ bgc: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  createRoom = () => {\r\n    if(this.state.type===''){\r\n      alert(\"You must choose a room type!\");\r\n      return;\r\n    }\r\n    if(this.state.name.length<1){\r\n      alert(\"ERROR\");\r\n      return;\r\n    }\r\n    this.props.addR({\r\n      name: this.state.name,\r\n      type: this.state.type,\r\n      color: this.state.bgc,\r\n      devices: []\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n          <div className=\"col-6\">\r\n            <select\r\n              name=\"roomType\"\r\n              onChange={this.addProp}\r\n              className=\"roomInp roomSel\"\r\n            >\r\n              <option selected disabled>\r\n                Choose Room Type\r\n              </option>\r\n              <option value=\"Kitchen\">Kitchen</option>\r\n              <option value=\"Bathroom\">Bathroom</option>\r\n              <option value=\"Bedroom\">Bedroom</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-3\"></div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n          <div className=\"col-6\">\r\n            <input name=\"roomName\" onChange={this.addProp} maxlength=\"5\" className=\"roomInp\" placeholder=\"Name...\" />\r\n          </div>\r\n          <div className=\"col-3\"></div>\r\n        </div>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-3\"></div>\r\n          <div className=\"col-6 colorTitle\">\r\n            Choose color\r\n            <input name=\"roomColor\" onChange={this.addProp} type=\"color\" className=\"roomInp row\" defaultValue=\"#ff0000\"/>\r\n          </div>\r\n          <div className=\"col-3\"></div>\r\n        </div>\r\n\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col-3\">\r\n          <Link style={{ textDecoration: 'none' }} to=\"/\">\r\n            <button onClick={this.createRoom} className=\"btn btn-primary crtRm\">Create</button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-8\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DeviceComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          index: props.index,\r\n          flag: props.device.flag,\r\n          type: props.device.type\r\n        };\r\n      }\r\n    toggle=()=>{\r\n        var colr;\r\n        if(this.state.flag===\"#ff0000\"){\r\n            colr=\"#00ff00\";\r\n        }\r\n        else{\r\n            colr=\"#ff0000\";\r\n        }\r\n        this.setState({flag:colr});\r\n        var tempVice = {\r\n            flag:colr,\r\n            type:this.state.type\r\n\r\n        }\r\n        this.props.upR(tempVice,this.state.index);\r\n         \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"devices\" onClick={this.toggle} style={{ backgroundColor: this.state.flag }}>\r\n                <span className=\"disable-selection\">{this.state.type}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class AddDevice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: \"\"\r\n    };\r\n  }\r\n  addType = (e) =>{\r\n    this.setState({type: e.target.value});\r\n  };\r\n  addDev = () =>{\r\n    if(this.state.type===\"\"){\r\n      alert(\"You must choose a device\");\r\n      return;\r\n    }\r\n    else{\r\n      this.props.addDev(\r\n        {type:this.state.type,\r\n        flag:\"#ff0000\"}\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"addDevComp\">\r\n        <select\r\n          name=\"deviceType\"\r\n          onChange={this.addType}\r\n          className=\"roomInp roomSel\">\r\n          <option selected disabled>\r\n            Choose Device\r\n          </option>\r\n          <option value=\"Stereo\">Stereo</option>\r\n          <option value=\"Lamp\">Lamp</option>\r\n          <option value=\"Kettle\">Kettle</option>\r\n          <option value=\"Air Conditioner\">Air Conditioner</option>\r\n          <option value=\"Fan\">Fan</option>\r\n          <option value=\"Boiler\">Boiler</option>\r\n          <option value=\"Television\">Television</option>\r\n        </select>\r\n        <div className=\"AddBtnCtnr row\">\r\n          <div className=\"col-7\"></div>\r\n          <button onClick={this.addDev} className=\"btn btn-primary col-2 addBtnDev\">Add</button>\r\n          <div className=\"col-3\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeviceComp from \"./DeviceComp\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddDevice from \"./AddDevice\";\r\n\r\nexport default class Room extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      flag: false,\r\n      room: props.room.location.state.room,\r\n      index: props.room.location.state.index\r\n    };\r\n  }\r\n  addDev = device => {\r\n    var tempRoom = this.state.room;\r\n    tempRoom.devices = [...tempRoom.devices, device];\r\n    this.setState({ room: tempRoom });\r\n    this.props.upR(this.state.room, this.state.index);\r\n  };\r\n  upR = (device, index) => {\r\n    var tempRooms = this.state.room;\r\n    tempRooms.devices[index] = device;\r\n    this.setState({ room: tempRooms });\r\n    this.props.upR(this.state.room, this.state.index);\r\n  };\r\n  show = () => {\r\n    if (this.state.flag === true) {\r\n      return (\r\n        <div>\r\n          <AddDevice addDev={this.addDev} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  };\r\n  render() {\r\n    console.log(\"rendered\");\r\n    return (\r\n      <div>\r\n        <div className=\"row roomDeets\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col-5 roomdetails\">\r\n            <div className=\"row\">Room Name: {this.state.room.name}</div>\r\n            <div className=\"row\">Room Type: {this.state.room.type}</div>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <div className=\"deviceBar\">\r\n              {this.state.room.devices.map((elm, i) => {\r\n                return <DeviceComp device={elm} index={i} upR={this.upR} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\"></div>\r\n        </div>\r\n\r\n        {this.show()}\r\n        <div className=\"btnContainer row\">\r\n          <div className=\"col-1\"></div>\r\n          <div className=\"col-1\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                this.setState({ flag: !this.state.flag });\r\n              }}\r\n            >\r\n              Add Device\r\n            </button>\r\n          </div>\r\n          <div className=\"col-8\"></div>\r\n          <div className=\"col-1\">\r\n            <Link to=\"/\">\r\n              <button className=\"btn btn-primary\">Home</button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-1\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./components/Home.js\";\r\nimport AddRoom from \"./components/AddRoom\";\r\nimport Room from \"./components/Room\";\r\nexport default class App extends Component {\r\n  state = {\r\n    rooms: []\r\n  };\r\n  AddRoom = room => {\r\n    this.setState({ rooms: [...this.state.rooms, room] });\r\n  };\r\n  UpdateRoom = (room, index) => {\r\n    var tempRooms = [...this.state.rooms];\r\n    tempRooms[index] = room;\r\n    this.setState({ rooms: [...tempRooms] });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <Router>\r\n              <Link className=\"shTitle\" to=\"/\">\r\n                Smart house\r\n              </Link>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return <Home rooms={this.state.rooms} />;\r\n                  }}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/AddRoom\"\r\n                  component={() => {\r\n                    return <AddRoom addR={this.AddRoom} />;\r\n                  }}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/Room\"\r\n                  component={(room, ind) => {\r\n                    return <Room room={room} i={ind} upR={this.UpdateRoom} />;\r\n                  }}\r\n                />\r\n              </Switch>\r\n            </Router>\r\n          </header>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}